// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AuthenticationWebsite.Auth_Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Change Password page", Description=" As a User I want to be able to update the Password", SourceFile="Auth_Specs\\Features\\ChangePassword.feature", SourceLine=0)]
    public partial class ChangePasswordPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangePassword.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Change Password page", " As a User I want to be able to update the Password", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void ChangePasswordAndLogin(string username, string password, string newPassword, string confirmPassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Password and Login", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I have a valid Credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I logged into Auth UI Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.And(string.Format("I enter the old {0}", password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("enter values in {0} and {1} as same", newPassword, confirmPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.Then("I Should get a Message saying \"Your new password has been submitted successfully\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.When("I Logout of the Auth Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.And(string.Format("I logIn with the {0} and {1}", username, newPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("I should be logged into Auth UI Site successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And(string.Format("I revert the {0} changes", newPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("I Should get a Message saying \"Your new password has been submitted successfully\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.And("I LogOut and Close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Password and Login, lnpmsapi+qatestlatest72@gmail.com", new string[] {
                "ChangePassword"}, SourceLine=23)]
        public virtual void ChangePasswordAndLogin_LnpmsapiQatestlatest72Gmail_Com()
        {
            this.ChangePasswordAndLogin("lnpmsapi+qatestlatest72@gmail.com", "Password1", "Password2", "Password2", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Password Page confirmation", new string[] {
                "ChangePasswordPage",
                "validations"}, SourceLine=26)]
        public virtual void ChangePasswordPageConfirmation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Password Page confirmation", new string[] {
                        "ChangePasswordPage",
                        "validations"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("I have a valid Credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("I logged into Auth UI Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.Then("I Should get a validation saying \"Password is required\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void ChangePasswordPageValidationMessageForNewPassword(string username, string password, string newPassword, string confirmPassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePasswordPage",
                    "validations"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Password Page validation message for new password", @__tags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I have a valid Credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.And("I logged into Auth UI Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.And(string.Format("I enter the old {0}", password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And(string.Format("enter values in {0} and {1} as different", newPassword, confirmPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.Then("I Should get a validation Error saying \"The password and confirm password do not " +
                    "match.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Password Page validation message for new password, lnpmsapi+qatestlatest72" +
            "@gmail.com", new string[] {
                "ChangePasswordPage",
                "validations"}, SourceLine=45)]
        public virtual void ChangePasswordPageValidationMessageForNewPassword_LnpmsapiQatestlatest72Gmail_Com()
        {
            this.ChangePasswordPageValidationMessageForNewPassword("lnpmsapi+qatestlatest72@gmail.com", "Password1", "Password2", "Password3", ((string[])(null)));
        }
        
        public virtual void ChangePasswordPageValidationMessageForOldPassword(string oldPassword, string newPassword, string confirmPassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePasswordPage",
                    "validations",
                    "IncorrectOldPassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Password Page validation message for Old password", @__tags);
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I have a valid Credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.And("I logged into Auth UI Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.And(string.Format("I enter the old {0}", oldPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And(string.Format("enter values in {0} and {1} as same", newPassword, confirmPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Then("I Should get a validation Error displayed as \"Old password entered in not correct" +
                    ".\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Password Page validation message for Old password, Password123", new string[] {
                "ChangePasswordPage",
                "validations",
                "IncorrectOldPassword"}, SourceLine=59)]
        public virtual void ChangePasswordPageValidationMessageForOldPassword_Password123()
        {
            this.ChangePasswordPageValidationMessageForOldPassword("Password123", "Password2", "Password2", ((string[])(null)));
        }
        
        public virtual void ChangePasswordPageValidationMessageForSamePassword(string oldPassword, string newPassword, string confirmPassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ChangePasswordPage",
                    "validations",
                    "IncorrectOldPassword"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change Password Page validation message for same password", @__tags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I have a valid Credentials", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.And("I logged into Auth UI Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When("I select the Change Password link on the left panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.And(string.Format("I enter the old {0}", oldPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And(string.Format("enter values in {0} and {1} as same", newPassword, confirmPassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.Then("I should get Error Message \"\'New Password\' must not be the same as \'Old Password\'" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Change Password Page validation message for same password, Password1", new string[] {
                "ChangePasswordPage",
                "validations",
                "IncorrectOldPassword"}, SourceLine=73)]
        public virtual void ChangePasswordPageValidationMessageForSamePassword_Password1()
        {
            this.ChangePasswordPageValidationMessageForSamePassword("Password1", "Password1", "Password1", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
